module.exports = {
  rules: {
    'array-bracket-newline': 'off',
    'array-bracket-spacing': 'error',
    'array-element-newline': 'off',
    'block-spacing': 'error',
    'brace-style': ['error', 'stroustrup', { 'allowSingleLine': true }],
    'camelcase': ['error', { 'properties': 'never' }],
    'capitalized-comments': 'off',
    'comma-dangle': ['error', 'never'],
    'comma-spacing': ['error', { 'before': false, 'after': true }],
    'comma-style': ['error', 'last'],
    'computed-property-spacing': 'error',
    'consistent-this': 'off',
    'eol-last': 'error',
    'func-call-spacing': 'error',
    'func-name-matching': 'error',
    'func-names': 'off',
    'func-style': 'off',
    'function-paren-newline': ['error', 'never'],
    'id-denylist': 'off',
    'id-length': 'off',
    'id-match': 'error',
    'implicit-arrow-linebreak': ['error', 'beside'],
    'indent': ['error', 2, {
      'VariableDeclarator': { 'var': 1, 'let': 1, 'const': 1 },
      'SwitchCase': 1
    }],
    'jsx-quotes': ['error', 'prefer-single'],
    'key-spacing': 'error',
    'keyword-spacing': 'error',
    'line-comment-position': 'off',
    'linebreak-style': ['error', 'unix'],
    'lines-around-comment': ['error', {
      'beforeBlockComment': true,
      'afterBlockComment': false,
      'beforeLineComment': false,
      'afterLineComment': false,
      'allowBlockStart': true,
      'allowBlockEnd': false,
      'allowObjectStart': true,
      'allowObjectEnd': false,
      'allowArrayStart': true,
      'allowArrayEnd': false
    }],
    'lines-between-class-members': ['error', 'always', { 'exceptAfterSingleLine': true }],
    'logical-assignment-operators': 'off',
    'max-depth': 'error',
    'max-len': ['error', {
      'code': 120,
      'tabWidth': 2,
      'ignoreUrls': true,
      'ignoreComments': false,
      'ignoreRegExpLiterals': true,
      'ignoreStrings': true,
      'ignoreTemplateLiterals': true
    }],
    'max-lines': 'off',
    'max-nested-callbacks': 'error',
    'max-params': 'off',
    'max-statements': 'off',
    'max-statements-per-line': ['error', { 'max': 2 }],
    'multiline-comment-style': 'off',
    'multiline-ternary': 'off',
    'new-cap': ['error', {
      'newIsCap': true,
      'newIsCapExceptions': [],
      'capIsNew': false,
      'capIsNewExceptions': ['Immutable.Map', 'Immutable.Set', 'Immutable.List']
    }],
    'new-parens': 'error',
    'newline-per-chained-call': ['error', { 'ignoreChainWithDepth': 4 }],
    'no-array-constructor': 'error',
    'no-bitwise': 'off',
    'no-continue': 'off',
    // 'no-empty-static-block': 'error',
    'no-inline-comments': 'off',
    'no-lonely-if': 'error',
    'no-mixed-operators': ['error', {
      'groups': [
        ['%', '**'],
        ['%', '+'],
        ['%', '-'],
        ['%', '*'],
        ['%', '/'],
        ['/', '*'],
        ['&', '|', '<<', '>>', '>>>'],
        ['==', '!=', '===', '!=='],
        ['&&', '||']
      ],
      'allowSamePrecedence': false
    }],
    'no-mixed-spaces-and-tabs': 'error',
    'no-multi-assign': 'off',
    'no-multiple-empty-lines': ['error', { 'max': 1 }],
    'no-negated-condition': 'error',
    'no-nested-ternary': 'error',
    'no-new-object': 'error',
    'no-plusplus': 'off',
    'no-restricted-syntax': 'error',
    'no-tabs': 'error',
    'no-ternary': 'off',
    'no-trailing-spaces': 'error',
    'no-underscore-dangle': 'off',
    'no-unneeded-ternary': 'error',
    'no-whitespace-before-property': 'error',
    'nonblock-statement-body-position': 'error',
    'object-curly-newline': 'off',
    'object-curly-spacing': ['error', 'always'],
    'object-property-newline': 'off',
    'one-var': ['error', 'consecutive'],
    'one-var-declaration-per-line': 'error',
    'operator-assignment': 'error',
    'operator-linebreak': ['error', 'after'],
    'padded-blocks': ['error', 'never'],
    'padding-line-between-statements': ['error',
      { 'blankLine': 'any', 'prev': 'expression', 'next': 'expression' },
      { 'blankLine': 'always', 'prev': ['block', 'for', 'function', 'multiline-expression', 'const', 'let', 'var'], 'next': '*' },
      { 'blankLine': 'always', 'prev': '*', 'next': ['break', 'continue', 'multiline-expression', 'multiline-block-like', 'return', 'export', 'const', 'let', 'var'] },
      { 'blankLine': 'any', 'prev': 'if', 'next': 'if' }
    ],
    'quote-props': ['error', 'as-needed'],
    'quotes': ['error', 'single'],
    'semi': 'error',
    'semi-spacing': 'error',
    'semi-style': ['error', 'last'],
    'sort-keys': 'off',
    'sort-vars': 'off',
    'space-before-blocks': 'error',
    'space-before-function-paren': 'error',
    'space-in-parens': 'error',
    'space-infix-ops': 'error',
    'space-unary-ops': 'error',
    'spaced-comment': ['error', 'always', {
      'block': {
        'exceptions': ['!']
      }
    }],
    'switch-colon-spacing': 'error',
    'template-tag-spacing': 'error',
    'unicode-bom': 'error',
    'wrap-regex': 'error'
  }
};
